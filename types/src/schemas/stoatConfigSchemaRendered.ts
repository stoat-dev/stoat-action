/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface StoatConfigSchemaRendered {
  version: number;
  enabled?: boolean;
  comment_template_file?: string;
  metadata?: {
    github?: {
      branch?: string;
      pull_request?: number;
      [k: string]: unknown;
    };
    [k: string]: unknown;
  };
  plugins?: {
    static_hosting?: StaticHostingPluginRenderedMap;
    json?: JsonPluginRenderedMap;
    image_diff?: ImageDiffPluginRenderedMap;
    workflow_dispatch?: WorkflowDispatchPluginRenderedMap;
    metric?: MetricPluginRenderedMap;
    chart?: ChartPluginRenderedMap;
    job_runtime?: JobRuntimePluginRendered;
    [k: string]: unknown;
  };
  updated_at?: string;
  views?: {
    plugins?: {
      static_hosting?: {
        github: {
          table: string;
          [k: string]: unknown;
        };
        [k: string]: unknown;
      };
      [k: string]: unknown;
    };
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
/**
 * This interface was referenced by `StoatConfigSchemaRendered`'s JSON-Schema
 * via the `definition` "static_hosting_plugin_rendered_map".
 */
export interface StaticHostingPluginRenderedMap {
  [k: string]: StaticHostingPluginRendered | StaticHostingPluginRenderedVariants;
}
/**
 * This interface was referenced by `StoatConfigSchemaRendered`'s JSON-Schema
 * via the `definition` "static_hosting_plugin_rendered".
 */
export interface StaticHostingPluginRendered {
  metadata?: {
    [k: string]: unknown;
  };
  task_type: "default";
  path: string;
  file_viewer?: boolean;
  link: string;
  sha: string;
  status: string;
  [k: string]: unknown;
}
/**
 * Static hosting tasks with variants, such as those produced by a matrix build.
 *
 * This interface was referenced by `StoatConfigSchemaRendered`'s JSON-Schema
 * via the `definition` "static_hosting_plugin_rendered_variants".
 */
export interface StaticHostingPluginRenderedVariants {
  metadata?: {
    [k: string]: unknown;
  };
  task_type: "variants";
  path: string;
  file_viewer?: boolean;
  sha: string;
  variants: {
    /**
     * The field name is the variant key value pairs delimited by comma. E.g. os: "ubuntu-latest, node-version: 12".
     */
    [k: string]: {
      link: string;
      status: string;
      [k: string]: unknown;
    };
  };
  [k: string]: unknown;
}
/**
 * This interface was referenced by `StoatConfigSchemaRendered`'s JSON-Schema
 * via the `definition` "json_plugin_rendered_map".
 */
export interface JsonPluginRenderedMap {
  [k: string]: JsonPluginRendered;
}
/**
 * This interface was referenced by `StoatConfigSchemaRendered`'s JSON-Schema
 * via the `definition` "json_plugin_rendered".
 */
export interface JsonPluginRendered {
  metadata?: {
    [k: string]: unknown;
  };
  path: string;
  value: {
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
/**
 * This interface was referenced by `StoatConfigSchemaRendered`'s JSON-Schema
 * via the `definition` "image_diff_plugin_rendered_map".
 */
export interface ImageDiffPluginRenderedMap {
  [k: string]: ImageDiffPluginRendered;
}
/**
 * This interface was referenced by `StoatConfigSchemaRendered`'s JSON-Schema
 * via the `definition` "image_diff_plugin_rendered".
 */
export interface ImageDiffPluginRendered {
  metadata?: {
    [k: string]: unknown;
  };
  image: string;
  baseline: string;
  image_url: string;
  baseline_url: string;
  diff_url: string;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `StoatConfigSchemaRendered`'s JSON-Schema
 * via the `definition` "workflow_dispatch_plugin_rendered_map".
 */
export interface WorkflowDispatchPluginRenderedMap {
  [k: string]: WorkflowDispatchPluginRendered;
}
/**
 * This interface was referenced by `StoatConfigSchemaRendered`'s JSON-Schema
 * via the `definition` "workflow_dispatch_plugin_rendered".
 */
export interface WorkflowDispatchPluginRendered {
  metadata?: {
    [k: string]: unknown;
  };
  filename: string;
  /**
   * A workflow can be triggered for different purposes or scopes (e.g. a deployment workflow for different environments). Set this field to tell Stoat how to identify the purpose or scope of each workflow. Usually the workflow run scope is set by one of the workflow inputs. You can specify the input parameter with the GitHub inputs context syntax: ${{ inputs.<input-parameter-name> }}, or JavaScript template literal syntax ${inputs.<input-parameter-name}. The default value is empty, and all workflow related information will be persisted under "plugins.workflow_dispatch.<task-id>". When this field is not empty, the persistent field is "plugins.workflow_dispatch.<task-id>.<scope-identifier>".
   */
  scope_identifier?: string;
  /**
   * The definition of the workflow.
   */
  definition: string;
  /**
   * The link to trigger the workflow. This link is populated by the server.
   */
  link?: string;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `StoatConfigSchemaRendered`'s JSON-Schema
 * via the `definition` "metric_plugin_rendered_map".
 */
export interface MetricPluginRenderedMap {
  [k: string]: MetricPluginRendered;
}
/**
 * This interface was referenced by `StoatConfigSchemaRendered`'s JSON-Schema
 * via the `definition` "metric_plugin_rendered".
 */
export interface MetricPluginRendered {
  metadata?: {
    [k: string]: unknown;
  };
  /**
   * The input file including the metric value. The file should be in JSON with these keys: "value" (required, number) and "group" (optional, string). The "group" key is used to group the metric values in the chart. This file will be consumed by the Stoat action as inputs for the metric task.
   */
  filename: string;
  values: MetricEntryRendered[];
  [k: string]: unknown;
}
/**
 * This interface was referenced by `StoatConfigSchemaRendered`'s JSON-Schema
 * via the `definition` "metric_entry_rendered".
 */
export interface MetricEntryRendered {
  ghBranch: string;
  ghPullRequestNumber?: number;
  ghSha?: string;
  tags: string[];
  value: number;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `StoatConfigSchemaRendered`'s JSON-Schema
 * via the `definition` "chart_plugin_rendered_map".
 */
export interface ChartPluginRenderedMap {
  [k: string]: ChartPluginRendered;
}
/**
 * This interface was referenced by `StoatConfigSchemaRendered`'s JSON-Schema
 * via the `definition` "chart_plugin_rendered".
 */
export interface ChartPluginRendered {
  metadata?: {
    [k: string]: unknown;
  };
  title: string;
  y_title?: string;
  tags: string[];
  link?: string;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `StoatConfigSchemaRendered`'s JSON-Schema
 * via the `definition` "job_runtime_plugin_rendered".
 */
export interface JobRuntimePluginRendered {
  enabled: boolean;
  tracking?: boolean;
  chart?: {
    width?: number;
    height?: number;
    [k: string]: unknown;
  };
  runtime: JobRuntimeEntry[];
  link?: string;
  [k: string]: unknown;
}
/**
 * This interface was referenced by `StoatConfigSchemaRendered`'s JSON-Schema
 * via the `definition` "job_runtime_entry".
 */
export interface JobRuntimeEntry {
  workflow: string;
  job: string;
  sha: string;
  runtime_seconds: number;
  [k: string]: unknown;
}
