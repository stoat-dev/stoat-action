/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface StoatConfigSchemaRendered {
  version: number;
  enabled?: boolean;
  comment_template_file?: string;
  plugins?: {
    static_hosting?: StaticHostingPluginRenderedMap;
    json?: JsonPluginRenderedMap;
    image_diff?: ImageDiffPluginRenderedMap;
    workflow_dispatch?: WorkflowDispatchPluginRenderedMap;
    job_runtime?: JobRuntimePluginRendered;
    [k: string]: unknown;
  };
  updated_at?: string;
  views?: {
    plugins?: {
      static_hosting?: {
        github: {
          table: string;
          [k: string]: unknown;
        };
        [k: string]: unknown;
      };
      [k: string]: unknown;
    };
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
export interface StaticHostingPluginRenderedMap {
  [k: string]: StaticHostingPluginRendered;
}
export interface StaticHostingPluginRendered {
  metadata?: {
    [k: string]: unknown;
  };
  path: string;
  file_viewer?: boolean;
  link: string;
  sha: string;
  status: string;
  [k: string]: unknown;
}
export interface JsonPluginRenderedMap {
  [k: string]: JsonPluginRendered;
}
export interface JsonPluginRendered {
  metadata?: {
    [k: string]: unknown;
  };
  path: string;
  value: {
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
export interface ImageDiffPluginRenderedMap {
  [k: string]: ImageDiffPluginRendered;
}
export interface ImageDiffPluginRendered {
  metadata?: {
    [k: string]: unknown;
  };
  image: string;
  baseline: string;
  image_url: string;
  baseline_url: string;
  diff_url: string;
  [k: string]: unknown;
}
export interface WorkflowDispatchPluginRenderedMap {
  [k: string]: WorkflowDispatchPluginRendered;
}
export interface WorkflowDispatchPluginRendered {
  metadata?: {
    [k: string]: unknown;
  };
  filename: string;
  /**
   * All workflow related information will be persisted under "plugins.workflow_dispatch.<task-id>.<identifier>". This is useful if the same workflow can be triggered for different purposes (e.g. deployment for multiple environments).
   */
  identifier?: string;
  /**
   * The definition of the workflow.
   */
  definition: string;
  /**
   * The link to trigger the workflow. This link is populated by the server.
   */
  dispatch_link?: string;
  [k: string]: unknown;
}
export interface JobRuntimePluginRendered {
  enabled: boolean;
  tracking?: boolean;
  chart?: {
    width?: number;
    height?: number;
    [k: string]: unknown;
  };
  runtime: JobRuntimeEntry[];
  [k: string]: unknown;
}
export interface JobRuntimeEntry {
  workflow: string;
  job: string;
  sha: string;
  runtime_seconds: number;
  [k: string]: unknown;
}
